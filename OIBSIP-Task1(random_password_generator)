import sys
import random
import array
from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QPushButton, QVBoxLayout, QLineEdit, QMessageBox, QCheckBox

class PasswordGenerator(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        self.setWindowTitle('Password Generator')
        self.setGeometry(100, 100, 400, 300)

        layout = QVBoxLayout()

        self.min_length_label = QLabel('Minimum Length:')
        layout.addWidget(self.min_length_label)

        self.min_length_entry = QLineEdit()
        layout.addWidget(self.min_length_entry)

        self.max_length_label = QLabel('Maximum Length:')
        layout.addWidget(self.max_length_label)

        self.max_length_entry = QLineEdit()
        layout.addWidget(self.max_length_entry)

        self.include_digits_checkbox = QCheckBox('Include Digits')
        self.include_digits_checkbox.setChecked(True)
        layout.addWidget(self.include_digits_checkbox)

        self.include_lowercase_checkbox = QCheckBox('Include Lowercase Letters')
        self.include_lowercase_checkbox.setChecked(True)
        layout.addWidget(self.include_lowercase_checkbox)

        self.include_uppercase_checkbox = QCheckBox('Include Uppercase Letters')
        self.include_uppercase_checkbox.setChecked(True)
        layout.addWidget(self.include_uppercase_checkbox)

        self.include_symbols_checkbox = QCheckBox('Include Symbols')
        self.include_symbols_checkbox.setChecked(True)
        layout.addWidget(self.include_symbols_checkbox)

        generate_button = QPushButton('Generate Password', self)
        generate_button.clicked.connect(self.generate_password)
        layout.addWidget(generate_button)

        copy_button = QPushButton('Copy Password', self)
        copy_button.clicked.connect(self.copy_password)
        layout.addWidget(copy_button)

        self.password_label = QLabel(self)
        layout.addWidget(self.password_label)

        self.setLayout(layout)

    def generate_password(self):
        min_length = int(self.min_length_entry.text())
        max_length = int(self.max_length_entry.text())
        passlist = []

        if self.include_digits_checkbox.isChecked():
            passlist.extend(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'])
        if self.include_lowercase_checkbox.isChecked():
            passlist.extend(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'])
        if self.include_uppercase_checkbox.isChecked():
            passlist.extend(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        if self.include_symbols_checkbox.isChecked():
            passlist.extend(['@', '#', '$', '%', '*', '_', '-'])

        password_length = random.randint(min_length, max_length)
        password = ''.join(random.sample(passlist, password_length))

        self.password_label.setText("Generated Password: " + password)
        self.generated_password = password

    def copy_password(self):
        if hasattr(self, 'generated_password'):
            clipboard = QApplication.clipboard()
            clipboard.setText(self.generated_password)
            QMessageBox.information(self, 'Password Copied', 'Password has been copied to clipboard.')

def main():
    app = QApplication(sys.argv)
    window = PasswordGenerator()
    window.show()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
